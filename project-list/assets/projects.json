{
  "projects": [
    { "type": "codepen", "id": "ExBGKjY", "title": "Netflix UI Clone", "description": "A clone of the Netflix interface showcasing popular shows, new releases, and trending content. This UI features smooth hover effects, an embedded background video, and dynamic elements that simulate a streaming platform’s look and feel.", "technologies": "Boxicons, JavaScript, HTML, CSS", "image": "" },
    { "type": "codepen", "id": "KKjreLw", "title": "Event Dashboard", "description": "A sleek, interactive event management dashboard featuring a sidebar for navigation, a search bar, and event cards with hover effects and “Buy Ticket” buttons. The design incorporates different types of events like concerts, workshops, and sports, with a right sidebar for analytics and a distribution chart of attended events. The interface is responsive and includes dark mode toggle functionality.", "technologies": "Boxicons, Chart.js, TailwindCSS, HTML, JavaScript", "image": "" },
    { "type": "codepen", "id": "bGPJeWj", "title": "Gradient Maker", "description": "A versatile gradient creation tool allowing users to design custom gradients by adjusting colors, positions, gradient type, and angle. The app features dynamic color pickers, precision controls, and the ability to copy the CSS code or export the gradient as an image. The user interface is sleek with a live gradient preview panel.", "technologies": "Vue.js, Bulma, HTML, CSS, JavaScript", "image": "" },
	{ "type": "codepen", "id": "vYqPyMx", "title": "iPhone UI Mockup", "description": "A detailed mockup of an iPhone interface that mimics the look and feel of iOS. It includes interactive features like widgets (weather, calendar), a dynamic app grid, a search bar, and a status bar. Clicking on app icons triggers an app screen overlay with app-specific details. The weather widget pulls real-time data using geolocation and the OpenWeather API, and a search feature opens a keyboard overlay similar to iOS.", "technologies": "Font Awesome, JavaScript, HTML, CSS, OpenWeather API", "image": "" },
	{ "type": "codepen", "id": "vYqPyNO", "title": "Pretty Image Slider", "description": "A dynamic image slider with swipe gestures and thumbnail navigation. The slider allows users to switch images by clicking on thumbnails or swiping left and right on mobile devices. It also features an automatic background gradient color change, extracted from the main image using a color quantization algorithm.", "technologies": "JavaScript, HTML(Slim), CSS, Canvas API", "image": "" },
	{ "type": "codepen", "id": "XWLOmpj", "title": "ImageProcessor.js", "description": "A documentation page for ImageProcessor.js, a JavaScript library I wrote to handle image manipulation, with various examples, including basic image processing, cropping, image loading, and more. The page features a sidebar for easy navigation, and embedded CodePen demos for each section to showcase specific functionalities like adding watermarks, converting images, and working with React and Vue components.", "technologies": "HTML, CSS, JavaScript", "image": "" },
	{ "type": "codepen", "id": "JjQwYML", "title": "JavaScript Concepts Interactive Demos", "description": "A collection of interactive JavaScript demos showcasing various concepts such as hoisting, closures, promises, destructuring, and more. The demos are embedded within a web page that dynamically displays each demo in a grid layout. This project serves as a learning tool for both beginner and advanced developers to explore core JavaScript principles through hands-on examples.", "technologies": "JavaScript, HTML, CSS, DOM Manipulation", "image": "" },
	{ "type": "codepen", "id": "yLdrxbe", "title": "GitHub User Search Dashboard", "description": "A GitHub user search and analytics dashboard that allows users to search for GitHub profiles by username or name. It features lists of top users by followers and those near the user’s location. The dashboard displays user details, repositories, and visualizes data through interactive charts, such as repository languages, star counts, and repository sizes.", "technologies": "JavaScript, HTML, CSS, Bootstrap 5, Fetch API, Chart.js, GitHub REST API, OpenStreetMap API, Geolocation API", "image": "" },
	{ "type": "codepen", "id": "abgxjQZ", "title": "Rounded Dashes Divider", "description": "A creative horizontal rule (HR) element styled as rounded dashes. This component uses pure CSS to control the size and color of the dashes, creating visually appealing separators. It enhances the standard HR element by incorporating radial gradients and spacing techniques for a modern look.", "technologies": "Advanced CSS, HTML, Gradients", "image": "" },
	{ "type": "codepen", "id": "eYwoGpV", "title": "Word Generator API & Front-End", "description": "This project includes a Word Generator API hosted on Vercel, which generates random text using Latin or Medieval word lists. The front-end displays the results, allowing users to fetch a paragraph of Latin text or view a console output of Latin words. The WordGenerator class provides extensive customization options, such as choosing word lists, formatting options, and output formats like string, array, or hash.", "technologies": "JavaScript, HTML, CSS, Vercel, API, Fetch API, ES6 Classes, Node.js", "image": "" },
	{ "type": "codepen", "id": "vYqPvMq", "title": "SaltyKeys.js", "description": "SaltyKeys.js is a JavaScript library designed to obfuscate and retrieve API keys by “salting” them with a CodePen Pen ID. It encodes the API key and Pen ID into a Base64 string for safe use within CodePen demos. While useful for educational purposes, this method is not secure for production environments, as the client-side obfuscation can be easily reversed.", "technologies": "JavaScript, Base64 Encoding, Regular Expressions, Client-Side Security", "image": "" },
	{ "type": "codepen", "id": "mdZzorY", "title": "Responsive Breakpoint Utility with JavaScript and Sass", "description": "This code defines responsive utilities using Sass and JavaScript to handle breakpoints dynamically. It provides Sass mixins for generating media queries at various screen sizes and a JavaScript class (GetViewport) to detect the current viewport’s size and breakpoint using the content property of pseudo-elements. The solution helps in creating highly responsive designs and allows JavaScript to react to changes in viewport size.", "technologies": "JavaScript, Sass, CSS, Media Queries, Pseudo-elements", "image": "" },
	{ "type": "codepen", "id": "WNqaRMp", "title": "3D Rotating Cube Animation", "description": "A rotating 3D cube animation using CSS. Each face of the cube is defined as a separate element, and the cube rotates continuously in both the X and Y directions. The loader is styled using CSS variables to make it customizable in terms of size, color, and animation speed. The animation runs infinitely, providing a visually engaging loading indicator.", "technologies": "CSS, CSS Variables, Keyframes, 3D Transform, Flexbox", "image": "" },
	{ "type": "codepen", "id": "rNEqWYM", "title": "Background Image Fade Effect", "description": "This section demonstrates a background image transitioning effect where the top image gradually fades out to reveal a transparent image underneath. The background image uses a fade-out animation to reduce its opacity over 5 seconds, uncovering the image beneath it. The container ensures both images are layered and positioned correctly with z-index. The background of the body features a subtle, tiled gradient pattern to enhance the visual effect.", "technologies": "CSS, Keyframes, 3D Layering", "image": "" },
	{ "type": "codepen", "id": "mdZzrZp", "title": "Gradient Background Animation", "description": "This example creates animated sections with a smoothly transitioning gradient background. Each section has its own customizable colors and animation speed. The gradient shifts horizontally across the section, creating a dynamic and visually appealing effect. The background properties such as colors and speed are controlled via CSS custom properties (--bg-color-1, --bg-color-2, and --bg-speed), making it easy to adjust the appearance and animation timing.", "technologies": "CSS, Keyframes, CSS Variables, Linear Gradients, Animation", "image": "" },
	{ "type": "codepen", "id": "zYVmKeG", "title": "Neon Glow Button Effect", "description": "This example demonstrates buttons with a glowing neon effect using CSS custom properties. The buttons change their glow color, intensity, and animation speed dynamically based on the custom properties (--glow-color, --glow-intensity, and --glow-speed). The glow effect is animated with conic gradients and pulsing radial gradients, creating a vibrant and dynamic appearance. The design is also sensitive to the user’s motion preferences.", "technologies": "CSS, Custom Properties, Keyframes, Gradients, Media Queries", "image": "" },
	{ "type": "codepen", "id": "zYVaYOb", "title": "Data Insights Dashboard", "description": "A dynamic dashboard for visualizing various data insights using Chart.js. Users can switch between different data views (e.g., Sales Data, User Engagement, Revenue Streams) by interacting with the sidebar. The dashboard includes a theme toggle button that switches between light and dark modes, with smooth transitions for background colors, text, and other elements. The layout is built using CSS Grid, and responsive styles are implemented for optimal display across different screen sizes.", "technologies": "HTML, CSS, SCSS, JavaScript, Chart.js, Compass", "image": "" },
	{ "type": "codepen", "id": "LYKrPqw", "title": "Interactive Compass Tool", "description": "A customizable box styling interface using Compass, allowing users to adjust various CSS properties such as background color, border radius, box shadow, animations, and gradient backgrounds. The real-time updates reflect in a preview area, offering a dynamic and visual approach to understanding how these styles impact the element. Users can modify the box’s appearance through inputs like color pickers, range sliders, and checkboxes, which trigger JavaScript events to instantly apply changes.", "technologies": "HTML, CSS, SCSS, Compass, JavaScript", "image": "" },
	{ "type": "codepen", "id": "MWMGLYo", "title": "Animated SVG Background", "description": "This demo creates an animated SVG background featuring moving circles with smooth transitions. Each circle follows a defined path and changes its position in an infinite loop. The background uses a linear gradient for color blending, and the animations utilize SVG <animate> elements to control the motion of each circle across the screen.", "technologies": "HTML, CSS, SVG", "image": "" },
	{ "type": "codepen", "id": "zYVjJXp", "title": "Monaspace Syntax Highlighting with Theme Toggle", "description": "This example demonstrates a syntax-highlighting interface using “Monaspace,” and color palettes for both light and dark themed code highlighting. A toggle button allows users to switch between light and dark modes dynamically, altering the background, text color, and code syntax highlighting. The light and dark themes feature distinct color schemes, enhancing the readability of code elements like functions, keywords, and numbers.", "technologies": "HTML, CSS, JavaScript, Monospace Font", "image": "" },
	{ "type": "codepen", "id": "dyBeWyr", "title": "Responsive Image Gallery using CSS Grid", "description": "A responsive image gallery that adjusts to different screen sizes using CSS Grid. Each image has a hover effect that slightly enlarges the image and displays an overlay containing a description. The overlay smoothly fades in with a slide-up effect, making the gallery interactive and visually appealing.", "technologies": "HTML, CSS, SCSS, CSS Grid", "image": "" },
	{ "type": "codepen", "id": "JjQpZgK", "title": "Interactive SVG Attribute Manipulation", "description": "This demo provides a user interface to dynamically manipulate the width, height, and viewBox attributes of an SVG element. Users can also upload their own SVG files and control their attributes via sliders. The system features a real-time update of the SVG attributes, allowing for easy resizing and repositioning, and includes a reset functionality to revert the SVG to its original settings.", "technologies": "HTML, CSS, JavaScript, SVG", "image": "" },
	{ "type": "codepen", "id": "GRbOeOL", "title": "File Upload Modal with Drag-and-Drop & Progress Bars", "description": "This demo creates a modal dialog for uploading files with drag-and-drop functionality and a manual file selector. Users can add titles for the uploaded files, and a progress bar simulates the upload process. Files are restricted to a 50MB size limit, and the design is responsive for smaller screen sizes.", "technologies": "HTML, CSS, SCSS, JavaScript", "image": "" },
	{ "type": "codepen", "id": "dyBvjNX", "title": "Color Contrast Validator with Tinycolor", "description": "This project dynamically checks and adjusts color contrast to meet WCAG AAA standards. It uses tinycolor to calculate the most readable colors based on the background and updates CSS variables for optimal contrast. The project creates color boxes displaying both the original and modified colors for light and dark themes. It also generates CSS rules to support both modes and handles dynamic changes with JavaScript.", "technologies": "JavaScript, HTML, CSS, Tinycolor", "image": "" },
	{ "type": "codepen", "id": "oNrdMKe", "title": "Light and Dark Mode Section Layout", "description": "This layout features side-by-side examples of light and dark mode implementations using the color-scheme property. The sections dynamically toggle background and text colors based on the mode, utilizing a smooth transition effect. It also uses a responsive design approach with Flexbox for layout and viewport units for padding. The layout is mobile-friendly and adapts to landscape orientations with grid-based adjustments.", "technologies": "HTML, CSS, Flexbox, Grid, color-scheme", "image": "" },
	{ "type": "codepen", "id": "RwmWLGg", "title": "Word Counter", "description": "This basic word counter tool allows users to type text and instantly get the word count displayed. It highlights key considerations regarding limitations, such as handling non-English characters, punctuation, and symbols like emojis. Additionally, a tooltip provides basic guidance on the counter’s purpose. The JavaScript function counts words based on common patterns.", "technologies": "HTML, CSS, JavaScript,", "image": "" },
	{ "type": "codepen", "id": "GRzpOJG", "title": "Bootstrap 5 Accoridion with Expand/Collapse All", "description": "This dynamic accordion allows users to expand or collapse sections with a toggle button. The Font Awesome icons change depending on whether the accordion is expanded or collapsed. Additionally, the accordion is designed to address accessibility by using aria-expanded attributes. A helper function ensures that the icons accurately reflect the state of the accordion, and users can toggle all sections at once.", "technologies": "HTML, CSS, JavaScript, Bootstrap 5, jQuery, Font Awesome", "image": "" },
	{ "type": "codepen", "id": "jOPNaZK", "title": "Google Fonts Search by Popularity", "description": "This tool enables users to search for Google Fonts by popularity and preview them in real-time. It features a search bar for filtering font families and displays editable examples for each font. Users can also copy the corresponding CSS import link directly to their clipboard. The tool dynamically loads up to 100 fonts and offers an option to view more. A responsive interface is built using Bootstrap components for a seamless user experience.", "technologies": "HTML, CSS, JavaScript, Bootstrap 5, Google Fonts API, jQuery", "image": "" },
	{ "type": "codepen", "id": "wvLbqgN", "title": "Markdown Table to Excel Converter", "description": "This tool converts Markdown tables into an Excel-friendly format. It enables users to paste a Markdown table and generate an HTML table for easy copying or downloading as a TSV file. The tool also supports basic formatting, such as bold and italic text, and handles alignment based on Markdown syntax. Users can clear the input or copy the converted table to the clipboard.", "technologies": "HTML, CSS, JavaScript, TailwindCSS, Excel, TSV", "image": "" },
	{ "type": "codepen", "id": "KKRmjGB", "title": "EyeDropper Bookmarklet", "description": "A simple bookmarklet that uses the EyeDropper API to allow users to pick a color from anywhere on their screen and copy its hex value to the clipboard. The feature includes a tooltip for instructions and works seamlessly on browsers that support the EyeDropper API. If the browser does not support the API, an alert informs the user.", "technologies": "HTML, CSS, JavaScript, Bookmarklet, EyeDropper API, Clipboard API", "image": "" },
	{ "type": "codepen", "id": "jOKEMaL", "title": "Grid Mode Bookmarklet", "description": "This bookmarklet enables a visual grid overlay on any webpage, helping developers and designers to better visualize the layout and alignment of elements. By activating grid lines that span across the viewport, users can check element spacing, alignment, and overall structure. The bookmarklet can be dragged to the bookmarks bar for easy activation on any website.", "technologies": "HTML, CSS, JavaScript, Bookmarklet", "image": "" },
	{ "type": "codepen", "id": "mdyeKry", "title": "DataTables.js Sort & Filter for CDC Library", "description": "This interactive table provides dynamic sorting and filtering capabilities for accessing data from the CDC’s HIV Together library. Users can toggle between three display views—table, card, and detailed views—while sorting and filtering through various attributes like title, audience, format, and more. It supports saving table state, applying session filters, and offers options to copy data or view links directly in a responsive format.", "technologies": "JavaScript, jQuery, DataTables.js, HTML, CSS, Bootstrap 5, AJAX", "image": "" },
	{ "type": "codepen", "id": "YzPPRKx", "title": "Public Health Image Library (PHIL) with DataTables.js", "description": "This demo showcases a responsive interface for the CDC’s Public Health Image Library (PHIL), allowing users to browse through a collection of health-related images. Users can toggle between a card view and a detailed view of the images using interactive buttons. The UI integrates DataTables.js for easy sorting and filtering of the data, all within a modern interface, without updating the older versions of Bootstrap and DataTables. Each image is accompanied by metadata such as titles and descriptions.", "technologies": "JavaScript, jQuery, DataTables.js, Bootstrap 5, HTML, CSS, Moment.js", "image": "" },
	{ "type": "codepen", "id": "poXXaeE", "title": "Multicolor CSS Border", "description": "A CSS recreation of the colorful top border seen on the Recreation.gov site footer, implemented using divs for better semantic accuracy instead of list items. The project demonstrates various methods to achieve this visual effect, including basic div-based blocks, linear gradients, and repeating-linear-gradients. The final version integrates the gradient effect through a pseudo-element, providing a cleaner and more adaptable approach.", "technologies": "HTML, CSS, Flexbox, Gradients", "image": "" },
	{ "type": "codepen", "id": "yLddyrO", "title": "Complex Themed Gradients", "description": "A visually stunning set of full-screen cards, each with a unique, complex gradient background design. These cards leverage a combination of linear, radial, and repeating gradients to create distinctive atmospheres such as camping, space, underwater, desert, and a neon city. The project demonstrates the creative use of layered CSS gradients to craft intricate and aesthetically pleasing designs that cover the entire viewport.", "technologies": "HTML, CSS, Gradients, Flexbox", "image": "" },
	{ "type": "codepen", "id": "jOjooLV", "title": "DeKalb County Tennessee Tourism Website Recreation", "description": "A demo website layout for DeKalb County Tennessee featuring a responsive navigation bar, an animated hero section showcasing images of Center Hill Lake, and various sections that provide information on local attractions such as marinas, lodging, camping, fishing, boating, and swimming. The design includes a mobile-friendly menu with a smooth transition for opening and closing, a backdrop overlay, and an animated sliding background for the hero image. The design is built using modern CSS techniques like Flexbox, Grid, and custom animations, and it adheres to accessibility principles.", "technologies": "HTML, TailwindCSS, Alpine.js, Keyframe Animations", "image": "" },
	{ "type": "codepen", "id": "rNEEXEL", "title": "Recreation Explorer Demo", "description": "A demo of a Recreation.gov-like application built using TailwindCSS, Leaflet.js for maps, and ipapi for location services. The application features a responsive navigation bar, a hero section with background image transitions, and a trip planner section that showcases various recreational activities. The app integrates interactive maps with markers for different recreation areas and provides a pagination feature for browsing multiple locations. The app also includes styled sections for trip planning, exploring activities, and informational links about recreational passes.", "technologies": "TailwindCSS, JavaScript, Alpine.js, Leaflet.js, IPAPI, Unsplash", "image": "" },
	{ "type": "codepen", "id": "MWMNOYE", "title": "CSS Masking Demo", "description": "This interactive demo lets users experiment with CSS masking by adjusting the position, size, and repetition of a mask applied to an image. Users can control the mask using sliders or drag the mask directly within the image bounds. The demo demonstrates how properties like mask-image, mask-position, and mask-size can be manipulated to reveal different portions of an image through a custom shape. This tool provides a simple, visual way to learn and explore CSS masking techniques in real time.", "technologies": "JavaScript, HTML(Slim), CSS", "image": "" },
	{ "type": "codepen", "id": "poModOP", "title": "Tailwind Card Styler", "description": "A fully interactive card styler demo built with TailwindCSS that allows users to customize a card’s appearance in real-time. Users can adjust the card’s width, height, padding, background, text colors, border-radius, and box shadows using range sliders and dropdown selectors. The demo includes a live preview of the code as users make changes, and users can copy the generated code or download a screenshot of the styled card using built-in features. It provides an intuitive interface for developers and designers to experiment with Tailwind’s utility classes and instantly visualize the changes on a card component.", "technologies": "JavaScript, ES6, HTML, TailwindCSS, HTML2Canvas", "image": "" },
	{ "type": "codepen", "id": "vYoEEPX", "title": "Real-time Comparison Tool", "description": "This tool enables users to compare two versions of text or code in real-time, highlighting the differences between them. It features three panels: one for the original content, one for the updated content, and a third panel that displays the differences using the jsdiff library for comparison and Diff2Html for rendering a visual diff. Users can edit both versions, view line numbers, load code from a URL, or copy code to the clipboard. A modal provides further information about the tool’s functionality.", "technologies": "JavaScript, HTML, CSS, jsdiff, Diff2Html, Fetch API, Clipboard API", "image": "" },
	{ "type": "codepen", "id": "eYqYXLG", "title": "UtilityHelpers.js Documentation and Examples", "description": "The UtilityHelpers class is a comprehensive toolkit offering a wide variety of utility functions to simplify common JavaScript development tasks. This demo showcases practical examples for handling images, arrays, strings, dates, and more. Some notable methods include getImageDetails for retrieving image metadata, shuffleArray for randomizing array elements, and debounce for performance optimization. The demo also includes advanced utilities like deepMerge for object manipulation and generateUUID for generating unique identifiers, helping developers reduce boilerplate code and focus on core logic.", "technologies": "JavaScript, ES6, HTML(Slim), CSS, TailwindCSS, Promises, Fetch API, SpeechSynthesis API, IntersectionObserver API, Canvas API", "image": "" },
    { "type": "website", "id": "https://color-palette-generator-chi.vercel.app/", "title": "Image Color Palette Generator", "description": "This Vue.js application is a color palette generator that allows users to search for random images using the Unsplash API, extract the dominant colors from the image using the ColorThief library, and generate a CSS color palette. The tool also includes voice search functionality using Annyang for speech recognition, and the user can save the generated color palette as a PNG image.", "technologies": "Vue.js, Axios, ColorThief, Html2Canvas, Prism.js, Annyang, Unsplash API, TailwindCSS", "image": "https://assets.codepen.io/252820/Image+Color+Palette+Generator.png?width=748&height=387&format=auto" },
	{ "type": "codepen", "id": "gONVjJg", "title": "Custom CodePen Profile", "description": "The CodePen profile page for each user only allows a limited amount of modification, and only through using CSS. I wanted to recreate the profile page, but with my own touches.", "technologies": "Vue.js, HTML, CSS, TailwindCSS, IntersectionObserver, JavaScript, CodePen API", "image": "" },
	{ "type": "website", "id": "https://www.cdc.gov", "title": "CDC Homepage 2024", "description": "The CDC’s 2024 homepage is designed to provide the latest health information, including featured topics, outbreak updates, and scientific research. It features a fully responsive layout with a modern design, carousel sliders for health-related content, and an interactive navigation system. Users can explore health topics, scientific journals, and find news related to public health. The page is optimized for accessibility and mobile devices, offering quick access to important CDC resources like emergency preparedness, health safety, and pandemic-related information.", "technologies": "HTML, CSS, JavaScript, Bootstrap 5, jQuery, WOW.js, CDC API, Gulp", "image": "https://assets.codepen.io/252820/cdc.webp" },
	{ "type": "website", "id": "https://covid.cdc.gov", "title": "COVID Data Tracker", "description": "The COVID Data Tracker provides real-time updates and visualizations of COVID-19 statistics, including cases, deaths, hospitalizations, and vaccination rates across the United States. It offers granular data by state and county, enabling users to track trends and compare regions. The dashboard incorporates data filtering and visualization features, such as maps and charts, powered by multiple data sources and APIs.", "technologies": "JavaScript, jQuery, D3.js, Bootstrap 5, Moment.js, MotionPoint, Tableau API, TopoJSON, Adobe Analytics, HTML, CSS", "image": "https://assets.codepen.io/252820/covid.webp" },
	{ "type": "website", "id": "https://codesandbox.io/p/github/peterbenoit/markdown-editor/", "title": "Markdown Editor with Syntax Highlighting", "description": "This is a fully functional Markdown editor with live preview and syntax highlighting using marked for parsing markdown and highlight.js for rendering code blocks. The editor supports basic text formatting like bold, italics, headers, links, and code blocks. It features a dark mode toggle, word and character counts, and saves your progress locally to the browser’s storage. Additionally, users can import and export markdown files for further editing. The app uses state management for markdown input and renders it in real-time with HTML output.", "technologies": "React, JavaScript, HTML, CSS, Marked.js, Highlight.js, Heroicons, Local Storage, FileReader API", "image": "https://assets.codepen.io/252820/markdown-editor.webp" },
	{ "type": "website", "id": "#", "title": "Portfolio Showcase with Filterable Projects", "description": "A portfolio website that showcases various projects, with a responsive navigation menu, detailed project sections, and a filterable project grid. Users can filter projects by technology (e.g., React, Vue, Angular, etc.) and explore live demos of the work directly on the site. Each project contains a brief description, a list of technologies used, and live links to the hosted demo or repository. The page layout is mobile-responsive, providing an optimal viewing experience across devices.", "technologies": "HTML, CSS, TailwindCSS, Angular, TypeScript, JavaScript, DomSanitizer, Formspree", "image": "https://assets.codepen.io/252820/creative-showcase.webp" },
	{ "type": "codepen", "id": "LYKZWvG", "title": "Save Page As Zip Bookmarklet", "description": "This bookmarklet allows users to save a web page along with all its associated images as a ZIP file. By clicking on the bookmarklet, it initiates a JavaScript script that uses the JSZip library to package the current page content and images into a ZIP archive, which is then downloadable by the user. This tool is helpful for capturing static versions of web pages for offline use.", "technologies": "JavaScript, HTML, JSZip, Pako, FontAwesome, CSS", "image": "https://assets.codepen.io/252820/internal/screenshots/pens/LYKZWvG.custom.png" }



  ]
}
